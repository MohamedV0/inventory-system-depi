@model InventoryManagementSystem.Models.ViewModels.Reports.ReportDTO
@using InventoryManagementSystem.Models.ViewModels.Reports

<div class="card shadow-sm mb-4 bg-card">
    <div class="card-header bg-card">
        <div class="d-flex justify-content-between align-items-center py-2">
            <div class="d-flex align-items-center">
                <i class="fas fa-chart-bar text-primary me-2"></i>
                <span class="fw-semibold text-white">@Model.ReportType Report</span>
                <span class="badge bg-primary ms-2">
                    <i class="far fa-clock me-1"></i>
                    @DateTime.Now.ToString("MMM dd, yyyy HH:mm")
                </span>
            </div>
            <div class="d-flex gap-2">
                <button type="button" class="btn btn-action btn-info" onclick="window.print()" data-bs-toggle="tooltip" title="Print Report">
                    <i class="fas fa-print"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Summary Section -->
    <div class="card-body py-2 border-bottom border-dark">
        <div class="row g-3">
            <div class="col-md-3">
                <div class="d-flex align-items-center">
                    <div class="icon-circle bg-primary-subtle me-2">
                        <i class="fas fa-boxes text-primary"></i>
                    </div>
                    <div>
                        <div class="text-secondary small">Total Items</div>
                        <div class="fw-semibold">@Model.Summary.TotalItems</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="d-flex align-items-center">
                    <div class="icon-circle bg-success-subtle me-2">
                        <i class="fas fa-dollar-sign text-success"></i>
                    </div>
                    <div>
                        <div class="text-secondary small">Total Value</div>
                        <div class="fw-semibold">@Model.Summary.TotalValue.ToString("C")</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="d-flex align-items-center">
                    <div class="icon-circle bg-warning-subtle me-2">
                        <i class="fas fa-exclamation-triangle text-warning"></i>
                    </div>
                    <div>
                        <div class="text-secondary small">Low Stock Items</div>
                        <div class="fw-semibold">@Model.Summary.LowStockItems</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="d-flex align-items-center">
                    <div class="icon-circle bg-danger-subtle me-2">
                        <i class="fas fa-times-circle text-danger"></i>
                    </div>
                    <div>
                        <div class="text-secondary small">Out of Stock</div>
                        <div class="fw-semibold">@Model.Summary.OutOfStockItems</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table m-0 data-table">
            <thead>
                <tr>
                    <th width="30%" class="sortable" data-sort="name">
                        <div class="d-flex align-items-center">
                            NAME <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                    <th width="15%" class="sortable" data-sort="category">
                        <div class="d-flex align-items-center">
                            CATEGORY <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                    <th width="15%" class="sortable text-end" data-sort="quantity">
                        <div class="d-flex align-items-center justify-content-end">
                            QUANTITY <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                    <th width="15%" class="sortable text-end" data-sort="unitPrice">
                        <div class="d-flex align-items-center justify-content-end">
                            UNIT PRICE <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                    <th width="15%" class="sortable text-end" data-sort="totalValue">
                        <div class="d-flex align-items-center justify-content-end">
                            TOTAL VALUE <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                    <th width="10%" class="sortable text-end" data-sort="lastUpdated">
                        <div class="d-flex align-items-center justify-content-end">
                            LAST UPDATED <i class="fas fa-sort ms-1 text-muted"></i>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    var stockClass = item.Quantity <= 0 ? "text-danger" : 
                                   item.Quantity <= 10 ? "text-warning" : "";
                    
                    <tr class="data-table-row">
                        <td>
                            <div class="d-flex align-items-center">
                                <i class="fas fa-box text-primary me-2"></i>
                                <span class="fw-medium">@item.Name</span>
                            </div>
                        </td>
                        <td>
                            <span class="badge rounded-pill category-badge py-2 px-3">
                                <i class="fas fa-tag me-1"></i> @item.Category
                            </span>
                        </td>
                        <td class="text-end">
                            <span class="@stockClass fw-medium">@item.Quantity</span>
                        </td>
                        <td class="text-end fw-medium">@item.UnitPrice.ToString("C")</td>
                        <td class="text-end fw-medium">@item.TotalValue.ToString("C")</td>
                        <td class="text-end">
                            <span class="text-secondary small">
                                @item.LastUpdated.ToString("MMM dd, yyyy")
                            </span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model.Items.Any() && Model.Items.First().TransactionHistory != null)
    {
        <div class="card-footer border-dark py-3">
            <div class="d-flex justify-content-between align-items-center">
                <div class="text-secondary small">
                    <i class="fas fa-info-circle me-1"></i> Transaction history included
                </div>
                <button class="btn btn-sm btn-outline-light" type="button" data-bs-toggle="collapse" data-bs-target="#transactionHistory">
                    <i class="fas fa-history me-1"></i> View History
                </button>
            </div>
            
            <div class="collapse mt-3" id="transactionHistory">
                <div class="table-responsive">
                    <table class="table table-sm m-0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Type</th>
                                <th class="text-end">Quantity</th>
                                <th class="text-end">Unit Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in Model.Items.Where(i => i.TransactionHistory != null).SelectMany(i => i.TransactionHistory))
                            {
                                <tr>
                                    <td>@transaction.Date.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td>
                                        <span class="badge @(transaction.TransactionType == "Addition" ? "bg-success" : "bg-danger")">
                                            @transaction.TransactionType
                                        </span>
                                    </td>
                                    <td class="text-end">@transaction.Quantity</td>
                                    <td class="text-end">@transaction.UnitPrice.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .icon-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .category-badge {
        background-color: rgba(var(--bs-primary-rgb), 0.1);
        color: var(--bs-primary);
        font-weight: normal;
    }
    
    .data-table-row:hover {
        background-color: rgba(255, 255, 255, 0.03);
    }
    
    .table > :not(caption) > * > * {
        background-color: transparent;
        color: inherit;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize table sorting with custom options
            new TableUtils('.data-table', {
                sortableClass: 'sortable',
                activeClass: 'active'
            });

            // Add entries dropdown functionality
            const $entriesSelect = $('<select>').addClass('form-select form-select-sm bg-dark text-light border-secondary ms-2')
                .append($('<option>').val('10').text('10'))
                .append($('<option>').val('25').text('25'))
                .append($('<option>').val('50').text('50'))
                .append($('<option>').val('100').text('100'));

            const $entriesDiv = $('<div>').addClass('d-flex align-items-center mb-3')
                .append($('<span>').addClass('text-light me-2').text('Show'))
                .append($entriesSelect)
                .append($('<span>').addClass('text-light ms-2').text('entries'));

            $('.table-responsive').before($entriesDiv);

            // Add search functionality
            const $searchDiv = $('<div>').addClass('d-flex align-items-center mb-3 ms-auto');
            const $searchInput = $('<input>').addClass('form-control form-control-sm bg-dark text-light border-secondary')
                .attr('placeholder', 'Search...')
                .on('keyup', function() {
                    const searchText = $(this).val().toLowerCase();
                    $('.data-table tbody tr').each(function() {
                        const rowText = $(this).text().toLowerCase();
                        $(this).toggle(rowText.indexOf(searchText) > -1);
                    });
                });

            $searchDiv.append($searchInput);
            $entriesDiv.after($searchDiv);

            // Handle entries change
            $entriesSelect.on('change', function() {
                const pageSize = $(this).val();
                const $rows = $('.data-table tbody tr');
                $rows.hide();
                $rows.slice(0, pageSize).show();
            }).trigger('change');
        });
    </script>
} 