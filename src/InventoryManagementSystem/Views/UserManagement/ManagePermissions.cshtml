@model ManageUserPermissionsViewModel
@using InventoryManagementSystem.Models.ViewComponents

@{
    ViewData["Title"] = "Manage Permissions";
}

<div class="container-fluid px-3 py-2">
    @{
        var headerModel = PageHeaderViewModel
            .Create("Manage Permissions", "fas fa-key")
            .WithSecondaryButton("Back to User Details", Url.Action("Details", "UserManagement", new { id = Model.UserId }), "fas fa-arrow-left");
    }
    <partial name="_PageHeader" model="headerModel" />

    <div class="card content-card shadow-sm mb-3">
        <div class="card-header d-flex justify-content-between align-items-center py-3">
            <h5 class="mb-0 d-flex align-items-center">
                <span class="icon-circle bg-primary-subtle me-2">
                    <i class="fas fa-user-shield text-primary"></i>
                </span>
                User Permissions
                <span class="badge bg-primary ms-2">@Model.UserName</span>
            </h5>
        </div>

        <div class="card-body p-3">
            <div class="alert alert-info d-flex align-items-center mb-4">
                <i class="fas fa-info-circle me-3"></i>
                <div>
                    Manage permissions by category. Changes will take effect immediately after saving.
                </div>
            </div>

            <form asp-action="ManagePermissions" method="post" class="permissions-form">
                <input type="hidden" name="id" value="@Model.UserId" />
                
                <div class="permissions-list">
                    @foreach (var category in Model.PermissionsByCategory.OrderBy(c => c.Key))
                    {
                        <div class="permission-category mb-3">
                            <div class="category-header d-flex align-items-center p-3 bg-dark border border-secondary rounded cursor-pointer" 
                                 data-bs-toggle="collapse" data-bs-target="#category_@(category.Key.Replace(" ", ""))">
                                <span class="icon-circle bg-primary-subtle me-2">
                                    <i class="fas fa-folder text-primary"></i>
                                </span>
                                <span class="me-2">@category.Key</span>
                                <div class="d-flex gap-2 ms-2">
                                    <span class="badge bg-primary">@category.Value.Count Total</span>
                                    <span class="badge bg-success">@category.Value.Count(p => p.IsGranted) Granted</span>
                                </div>
                                <i class="fas fa-chevron-down ms-auto"></i>
                            </div>

                            <div class="collapse show" id="category_@(category.Key.Replace(" ", ""))">
                                <div class="permission-items border border-top-0 border-secondary rounded-bottom p-0">
                                    <div class="permission-header d-flex p-3 border-bottom border-secondary bg-dark-subtle">
                                        <div style="width: 40px">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input toggle-category"
                                                       data-category="@category.Key.Replace(" ", "")"
                                                       id="toggle_@(category.Key.Replace(" ", ""))"
                                                       @(category.Value.All(p => p.IsGranted) ? "checked" : "") />
                                            </div>
                                        </div>
                                        <div class="flex-grow-1 d-flex">
                                            <div style="width: 30%" class="text-uppercase small fw-medium">Permission</div>
                                            <div style="width: 70%" class="text-uppercase small fw-medium">Description</div>
                                        </div>
                                    </div>

                                    @foreach (var permission in category.Value.OrderBy(p => p.PermissionName))
                                    {
                                        <div class="permission-item d-flex align-items-center p-3 border-bottom border-secondary">
                                            <div style="width: 40px">
                                                <div class="form-check">
                                                    <input type="checkbox" class="form-check-input permission-check @category.Key.Replace(" ", "")"
                                                           name="grantedPermissions" value="@permission.PermissionId"
                                                           id="permission_@permission.PermissionId"
                                                           @(permission.IsGranted ? "checked" : "") />
                                                </div>
                                            </div>
                                            <div class="flex-grow-1 d-flex">
                                                <div style="width: 30%" class="permission-name d-flex align-items-center">
                                                    <span class="icon-circle bg-primary-subtle me-2" style="width: 24px; height: 24px;">
                                                        <i class="fas fa-check text-primary small"></i>
                                                    </span>
                                                    @permission.PermissionName
                                                </div>
                                                <div style="width: 70%" class="text-secondary">@permission.Description</div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="d-flex justify-content-between align-items-center mt-4">
                    <div class="d-flex align-items-center text-secondary">
                        <i class="fas fa-info-circle me-2"></i>
                        <small>Changes will take effect immediately after saving</small>
                    </div>
                    <button type="submit" class="btn btn-primary px-4">
                        <i class="fas fa-save me-2"></i>
                        Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle toggle all permissions in a category
            $('.toggle-category').on('change', function() {
                const categoryClass = $(this).data('category');
                const isChecked = $(this).prop('checked');
                $(`.${categoryClass}`).prop('checked', isChecked);
                updateCategoryStyle(categoryClass, isChecked);
            });
            
            // Update category toggle when individual permissions change
            $('.permission-check').on('change', function() {
                const categoryClass = $(this).attr('class').split(' ')[1];
                const allChecked = $(`.${categoryClass}`).length === $(`.${categoryClass}:checked`).length;
                $(`#toggle_${categoryClass}`).prop('checked', allChecked);
                updateCategoryStyle(categoryClass, allChecked);
            });

            function updateCategoryStyle(categoryClass, isChecked) {
                const header = $(`#toggle_${categoryClass}`).closest('.category-header');
                if (isChecked) {
                    header.addClass('category-all-checked');
                } else {
                    header.removeClass('category-all-checked');
                }
            }

            // Initialize category styles
            $('.toggle-category').each(function() {
                const categoryClass = $(this).data('category');
                const allChecked = $(`.${categoryClass}`).length === $(`.${categoryClass}:checked`).length;
                updateCategoryStyle(categoryClass, allChecked);
            });
        });
    </script>

    <style>
        .content-card {
            background-color: #0a1929;
            border: 1px solid #1e3a57;
        }

        .card-header {
            background-color: #0f2744;
            border-bottom: 1px solid #1e3a57;
        }

        .icon-circle {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            background-color: rgba(56, 139, 253, 0.1);
        }

        .permission-category .category-header {
            transition: background-color 0.2s;
            background-color: #0f2744 !important;
            border-color: #1e3a57 !important;
        }

        .permission-category .category-header:hover {
            background-color: #15325b !important;
        }

        .permission-items {
            background-color: #0a1929;
        }

        .permission-item {
            transition: background-color 0.2s;
        }

        .permission-item:hover {
            background-color: #0f2744;
        }

        .bg-dark-subtle {
            background-color: #0f2744 !important;
        }

        .form-check-input {
            background-color: #15325b;
            border-color: #1e3a57;
        }

        .form-check-input:checked {
            background-color: #1f6feb;
            border-color: #1f6feb;
        }

        .alert-info {
            background-color: rgba(56, 139, 253, 0.1);
            border-color: rgba(56, 139, 253, 0.4);
            color: #58a6ff;
        }

        .badge {
            font-weight: 500;
            padding: 0.35em 0.65em;
        }

        .badge.bg-primary {
            background-color: #1f6feb !important;
        }

        .badge.bg-success {
            background-color: #238636 !important;
        }

        .text-primary {
            color: #58a6ff !important;
        }

        .btn-primary {
            background-color: #238636;
            border-color: #238636;
        }

        .btn-primary:hover {
            background-color: #2ea043;
            border-color: #2ea043;
        }

        .category-all-checked {
            border-left: 3px solid #238636 !important;
        }

        .permission-name {
            color: #e6edf3;
        }

        .text-secondary {
            color: #8b949e !important;
        }

        .border-secondary {
            border-color: #1e3a57 !important;
        }
    </style>
} 