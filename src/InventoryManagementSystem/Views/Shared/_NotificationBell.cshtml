@model NotificationBellViewModel

<li class="nav-item nav-icon notification-bell" data-notifications="@(Model.UnreadCount > 0 ? "true" : "false")">
    <a class="nav-link" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="fas fa-bell"></i>
        @if (Model.UnreadCount > 0)
        {
            <span class="badge rounded-pill notification-badge">@Model.UnreadCount</span>
        }
    </a>
    <div class="dropdown-menu notification-dropdown">
        <div class="dropdown-header d-flex justify-content-between align-items-center">
            <span>Notifications</span>
            @if (Model.UnreadCount > 0)
            {
                <button class="btn btn-link btn-sm p-0 text-decoration-none" onclick="markAllNotificationsAsRead()">
                    <small>Mark all as read</small>
                </button>
            }
        </div>
        @if (!Model.UnreadNotifications.Any())
        {
            <div class="dropdown-item text-center py-3">
                <i class="fas fa-bell-slash text-muted mb-2" style="font-size: 1.5rem;"></i>
                <p class="text-muted mb-0"><small>No new notifications</small></p>
            </div>
        }
        else
        {
            foreach (var notification in Model.UnreadNotifications)
            {
                <div class="dropdown-item notification-item" data-notification-id="@notification.Id">
                    <div class="d-flex w-100 justify-content-between mb-1">
                        <h6 class="mb-0 text-truncate">@notification.Title</h6>
                        <small class="text-muted ms-2">@notification.CreatedAt.ToString("M/d/yy h:mm tt")</small>
                    </div>
                    <p class="mb-1 small text-truncate">@notification.Message</p>
                    @if (notification.ProductId.HasValue)
                    {
                        <a class="small text-primary" asp-controller="Products" asp-action="Details" asp-route-id="@notification.ProductId">
                            View Product <i class="fas fa-chevron-right ms-1" style="font-size: 0.7rem;"></i>
                        </a>
                    }
                </div>
            }
        }
        <div class="dropdown-divider my-0"></div>
        <a class="dropdown-item text-center py-2" asp-controller="Notification" asp-action="Index">
            <small>View All Notifications</small>
        </a>
    </div>
</li>

@section Scripts {
    <script>
        function markAllNotificationsAsRead() {
            $.post('@Url.Action("MarkAllAsRead", "Notification")', function(response) {
                if (response.success) {
                    $('.notification-badge').remove();
                    $('.notification-item').remove();
                    $('.dropdown-header .btn-link').remove();
                    $('.notification-bell').attr('data-notifications', 'false');
                    $('.notification-dropdown').find('.dropdown-item.text-center').remove();
                    $('.notification-dropdown').prepend(
                        '<div class="dropdown-item text-center py-3">' +
                        '<i class="fas fa-bell-slash text-muted mb-2" style="font-size: 1.5rem;"></i>' +
                        '<p class="text-muted mb-0"><small>No new notifications</small></p>' +
                        '</div>'
                    );
                    toastr.success('All notifications marked as read');
                }
            }).fail(function(error) {
                console.error('Error marking notifications as read:', error);
                toastr.error('Error marking notifications as read');
            });
        }

        $(document).ready(function() {
            $('.notification-item').click(function() {
                var notificationId = $(this).data('notification-id');
                var item = $(this);
                
                $.post('@Url.Action("MarkAsRead", "Notification")', { id: notificationId }, function(response) {
                    if (response.success) {
                        item.fadeOut(function() {
                            $(this).remove();
                            var remainingCount = $('.notification-item').length;
                            if (remainingCount === 0) {
                                $('.notification-badge').remove();
                                $('.dropdown-header .btn-link').remove();
                                $('.notification-bell').attr('data-notifications', 'false');
                                $('.notification-dropdown').prepend(
                                    '<div class="dropdown-item text-center py-3">' +
                                    '<i class="fas fa-bell-slash text-muted mb-2" style="font-size: 1.5rem;"></i>' +
                                    '<p class="text-muted mb-0"><small>No new notifications</small></p>' +
                                    '</div>'
                                );
                            } else {
                                $('.notification-badge').text(remainingCount);
                            }
                        });
                    }
                }).fail(function(error) {
                    console.error('Error marking notification as read:', error);
                    toastr.error('Error marking notification as read');
                });
            });
        });
    </script>
} 